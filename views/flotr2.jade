head
  script(src='/packages/flotr2/flotr2.min.js', type='text/javascript')
body
  .container
    h1= title
    h2 Dowloadable and soon to be zoomable too
    br
    .row
      form#image-download(name='image-download', action='', onsubmit='return false')
        label.lineUp
          input.lineUp(type='radio', name='format', value='png', checked='checked') 
          | PNG
        label.lineUp
          input.lineUp(type='radio', name='format', value='jpeg') 
          | JPEG
        button.lineUp(name='to-image', onclick='CurrentExample(\'to-image\')') To Image
        button.lineUp(name='download', onclick='CurrentExample(\'download\')') Download
        button.lineUp(name='reset', onclick='CurrentExample(\'reset\')') Reset
    .row
      #example.chart_div
  script
    (function () {
      function mouse_zoom(container) {
    
          var
            d1 = [],
            d2 = [],
            d3 = [],
            options,
            graph,
            i;
    
          for (i = 0; i < 40; i += 0.5) {
            d1.push([i, Math.sin(i)+3*Math.cos(i)]);
            d2.push([i, Math.pow(1.1, i)]);
            d3.push([i, 40 - i+Math.random()*10]);
          }
          
          options = {
            selection : { mode : 'x', fps : 30 },
            title: 'Download Image Example',
            subtitle: 'You can save me as an image',
            xaxis:{
              noTicks: 7, // Display 7 ticks.
              tickFormatter: function(n){ return '('+n+')'; }, // => displays tick values between brackets.
              labelsAngle: 45,
              title: 'x Axis'
            },
            yaxis:{
              ticks: [[0, "Lower"], 10, 20, 30, [40, "Upper"]],
              title: 'y = f(x)'
            },
            y2axis:{color:'#FF0000', max: 500, title: 'y = x^3'},
            grid:{
              backgroundColor: 'white'
            },
            HtmlText: false,
            legend: {
              position: 'nw'
            }
          };
        
          // Draw graph with default options, overwriting with passed options
          function drawGraph (opts) {
    
            // Clone the options, so the 'options' variable always keeps intact.
            var o = Flotr._.extend(Flotr._.clone(options), opts || {});
    
            // Return a new graph.
            return Flotr.draw(
              container,
              [ d1, d2, d3 ],
              o
            );
          }
    
          // Actually draw the graph.
          graph = drawGraph();      
        
          // Hook into the 'flotr:select' event.
          Flotr.EventAdapter.observe(container, 'flotr:select', function (area) {
    
            // Draw graph with new area
            f = drawGraph({
              xaxis: {min:area.x1, max:area.x2},
              yaxis: {min:area.y1, max:area.y2}
            });
    
          });

          // When graph is clicked, draw the graph with default area.          
          Flotr.EventAdapter.observe(container, 'flotr:click', function () {
              drawGraph();
          });
          //download
          this.CurrentExample = function (operation) {

            var
              format = $('#image-download input:radio[name=format]:checked').val();
            if (Flotr.isIE && Flotr.isIE < 9) {
              alert(
                "Your browser doesn't allow you to get a bitmap image from the plot, " +
                "you can only get a VML image that you can use in Microsoft Office.<br />"
              );
            }

            if (operation == 'to-image') {
              graph.download.saveImage(format, null, null, true)
            } else if (operation == 'download') {
              graph.download.saveImage(format);
            } else if (operation == 'reset') {
              graph.download.restoreCanvas();
            }
          };
      }
      mouse_zoom(document.getElementById("example"));
    })();